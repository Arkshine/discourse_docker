#!/bin/bash
set -e

# version check: https://github.com/ImageMagick/ImageMagick/releases
IMAGE_MAGICK_VERSION="7.1.0-62"
IMAGE_MAGICK_HASH="d282117bc6d0e91ad1ad685d096623b96ed8e229f911c891d83277b350ef884a"

# AV1 Codec version: https://aomedia.googlesource.com/aom/
# Ubuntu 18 only
LIB_AOM_VERSION="3.6.1"

# libheif: https://github.com/strukturag/libheif/releases
# ImageMagick requires libheif >= 1.4.0
# Ubuntu 18 only
LIB_HEIF_VERSION="1.12.0"
LIB_HEIF_HASH="086145b0d990182a033b0011caadb1b642da84f39ab83aa66d005610650b3c65"

# We use debian, but GitHub CI is stuck on Ubuntu Bionic, so this must be compatible with both
LIBJPEGTURBO=$(cat /etc/issue | grep -qi Debian && echo 'libjpeg62-turbo libjpeg62-turbo-dev' || echo 'libjpeg-turbo8 libjpeg-turbo8-dev')

# Ubuntu 22.04/22.10  doesn't have libwebp6
LIBWEBP=$(cat /etc/issue | grep -qi 'Ubuntu 22' && echo 'libwebp7' || echo 'libwebp6')

PREFIX=/usr/local
WDIR=/tmp/imagemagick

mkdir -p $WDIR
cd $WDIR

# Install build deps
apt -y -q remove imagemagick
apt -y -q install git make gcc pkg-config autoconf curl g++ yasm cmake \
    libde265-0 libde265-dev ${LIBJPEGTURBO} x265 libx265-dev libtool \
    libpng16-16 libpng-dev ${LIBJPEGTURBO} ${LIBWEBP} libwebp-dev libgomp1 \
    libwebpmux3 libwebpdemux2 ghostscript libxml2-dev libxml2-utils librsvg2-dev \
    libltdl7-dev libbz2-dev gsfonts libtiff-dev libfreetype6-dev libjpeg-dev

# Ubuntu doesn't like `bullseye-backports`
if cat /etc/issue | grep -qi 'Ubuntu 18'; then
  # ImageMagick requires libheif >= 1.4.0
  wget -q -O $WDIR/libheif.tar.gz "https://github.com/strukturag/libheif/archive/v$LIB_HEIF_VERSION.tar.gz"
  sha256sum $WDIR/libheif.tar.gz
  echo "$LIB_HEIF_HASH $WDIR/libheif.tar.gz" | sha256sum -c
  HFDIR=$WDIR/$(tar tzf $WDIR/libheif.tar.gz --wildcards "libheif-*/configure.ac" | cut -d/ -f1)
  tar zxf $WDIR/libheif.tar.gz -C $WDIR
  cd $HFDIR
  ./autogen.sh
  ./configure
  make && make install 

  # Ubuntu 18 doesn't have libaom-dev
  git clone https://aomedia.googlesource.com/aom
  cd aom && git checkout v${LIB_AOM_VERSION} && cd ..
  mkdir build_aom && cd build_aom
  cmake ../aom/ -DENABLE_TESTS=0 -DBUILD_SHARED_LIBS=1
  make && make install
  cd ..
elif cat /etc/issue | grep -qiE 'Ubuntu 20|22'; then
  apt -y install libheif1 libaom-dev libheif-dev
else
  # Use backports instead of compiling it
  apt -y -q install -t bullseye-backports libheif1 libaom-dev libheif-dev
fi

# Build and install ImageMagick
wget -q -O $WDIR/ImageMagick.tar.gz "https://github.com/ImageMagick/ImageMagick/archive/$IMAGE_MAGICK_VERSION.tar.gz"
sha256sum $WDIR/ImageMagick.tar.gz
echo "$IMAGE_MAGICK_HASH $WDIR/ImageMagick.tar.gz" | sha256sum -c
IMDIR=$WDIR/$(tar tzf $WDIR/ImageMagick.tar.gz --wildcards "ImageMagick-*/configure" |cut -d/ -f1)
tar zxf $WDIR/ImageMagick.tar.gz -C $WDIR
cd $IMDIR
PKG_CONF_LIBDIR=$PREFIX/lib LDFLAGS=-L$PREFIX/lib CFLAGS=-I$PREFIX/include ./configure \
          --prefix=$PREFIX \
          --enable-static \
          --enable-bounds-checking \
          --enable-hdri \
          --enable-hugepages \
          --with-threads \
          --with-modules \
          --with-quantum-depth=16 \
          --without-magick-plus-plus \
          --with-bzlib \
          --with-zlib \
          --without-autotrace \
          --with-freetype \
          --with-jpeg \
          --without-lcms \
          --with-lzma \
          --with-png \
          --with-tiff \
          --with-heic \
          --with-rsvg \
          --with-webp
make all && make install

cd $HOME
rm -rf $WDIR
ldconfig /usr/local/lib

# Validate ImageMagick install
test $(convert -version | grep -o -e png -e tiff -e jpeg -e freetype -e heic -e webp | wc -l) -eq 6
